// Темы:
// Перегрузка операторов.
// Встроенные объекты 

//#include "stdafx.h"	//если Вы используете предкомпиляцию заголовочных
					//файлов, раскомментируйте эту строчку
#include "Base.h"
#include <tchar.h>


#define	  stop __asm nop

int _tmain(int argc, _TCHAR* argv[])
{
//////////////////////////////////////////////////////////////////////
	
	//Задание 1. Разработать "базу данных" о сотрудниках посредством ассоциативного
	//массива. Ключом является фамилия (ключ в задании уникален, поэтому нескольких Ивановых
	//в базе быть не может), а данными: пол, возраст, должность, зарплата...
	//Реализуйте:
	//добавление сотрудников в базу
	//исключение сотрудника из базы
	//вывод информации о конкретном сотруднике
	//вывод всей (или интересующей) информации о всех сотрудниках
	//(подсказки по реализации базы в файле "База_данных-ооп.pdf")
	//Например:

	Base MyBase_1;	//создание пустой базы
	stop

	////добавляем сотрудников в базу
	MyBase_1["Ivanov"] = MyData(MyData::MALE, 30, "Lehrer", 35.000);
	stop
	MyBase_1["Petrova"] = MyData(MyData::FEMALE, 35, "Bauer", 45.000);
	stop
	MyBase_1["Sidorov"] = MyData(MyData::MALE, 50, "Fahrer", 50.000);
	stop
	std::cout << MyBase_1; //выводим информацию обо всех сотрудниках
	stop
	std::cout << MyBase_1["Ivanov"]; //выводим информацию о сотруднике
	stop
	MyBase_1.deletePair("Petrova"); //исключаем сотрудника
	std::cout << MyBase_1; //выводим информацию обо всех сотрудниках  из базы bd1
	stop

	//Задание 2. Разработайте необходимые методы для того, чтобы код,
	// приведенный ниже выполнялся корректно

	//Задание 2.1. создайте 2 копии  базы  bd1
	Base MyBase_2 = MyBase_1; 
	std::cout << MyBase_2; //выводим информацию обо всех сотрудниках  из базы bd2
	Base MyBase_3 = MyBase_1;
	std::cout << MyBase_3; //выводим информацию обо всех сотрудниках  из базы bd3
	stop
	//Задание 2.2.  
	//добавьте сотрудников в базу  bd2
	std::cout << MyBase_2; //выводим информацию обо всех сотрудниках  из базы bd2
	MyBase_2["Lomakina"] = MyData(MyData::FEMALE, 40, "Verkauferin", 45.000);
	MyBase_2["Gromova"] = MyData(MyData::FEMALE, 60, "Fahrerin", 50.000);
	MyBase_1 = MyBase_2;   //  из "большой" в "маленькую"
	std::cout << MyBase_1; //выводим информацию обо всех сотрудниках  из базы bd1
	stop
	//Задание 2.3.
	MyBase_1 = MyBase_3;   //  из "маленькой"  в "большую" 
	std::cout << MyBase_1; //выводим информацию обо всех сотрудниках  из базы bd1
	stop

	//Задание 3. вспоминаем про семантику перемещения
	//Задание 3.1. создайте копию  базы  bd1
	Base MyBase_4 = std::move(MyBase_1);
	std::cout << MyBase_4; //выводим информацию обо всех сотрудниках  из базы bd4
	std::cout << MyBase_1; //выводим информацию обо всех сотрудниках  из базы bd2
	stop
	//Задание 3.2. 

	MyBase_3 = std::move(MyBase_4);
	std::cout << MyBase_3; //выводим информацию обо всех сотрудниках  из базы bd3
	std::cout << MyBase_4; //выводим информацию обо всех сотрудниках  из базы bd4
	stop
	//Задание 4.  Сортировка

	//Задание 4.1. Разработайте сортировку базы данных  по возрастанию ключа
	//подумайте, что надо перегрузить в классе MyString
	
	//Задание 4.2.Отсортируйте любую базу данных и выведите результат


		std::cout << MyBase_2 << std::endl;
		MyBase_2.Sort();
	std::cout << MyBase_2 << std::endl;
	stop
		system("pause");
	return 0;
}//endmain

