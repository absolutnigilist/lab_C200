// Темы:
// Перегрузка операторов.
// Встроенные объекты 

//#include "stdafx.h"	//если Вы используете предкомпиляцию заголовочных
					//файлов, раскомментируйте эту строчку
#include "Base.h"
#include <tchar.h>


#define	  stop __asm nop

int _tmain(int argc, _TCHAR* argv[])
{
//////////////////////////////////////////////////////////////////////
	
	//Задание 1. Разработать "базу данных" о сотрудниках посредством ассоциативного
	//массива. Ключом является фамилия (ключ в задании уникален, поэтому нескольких Ивановых
	//в базе быть не может), а данными: пол, возраст, должность, зарплата...
	//Реализуйте:
	//добавление сотрудников в базу
	//исключение сотрудника из базы
	//вывод информации о конкретном сотруднике
	//вывод всей (или интересующей) информации о всех сотрудниках
	//(подсказки по реализации базы в файле "База_данных-ооп.pdf")
	//Например:

		Base MyBase;	//создание пустой базы
		stop

		////добавляем сотрудников в базу
		MyBase["Ivanov"] = MyData(MyData::MALE, 30, "Lehrer", 35.000);
		stop
		//MyBase["Petrova"] = MyData(MyData::FEMALE, 35, "Bauer", 45.000);
		//MyBase["Sidorov"] = MyData(MyData::MALE, 50, "Fahrer", 50.000);
		//stop
		//std::cout << MyBase; //выводим информацию обо всех сотрудниках
		//stop
		//std::cout << MyBase["Ivanov"]; //выводим информацию о сотруднике
		//stop
		//MyBase.deletePair("Petrova"); //исключаем сотрудника
		//std::cout << MyBase; //выводим информацию обо всех сотрудниках  из базы bd1
		//stop
/*
	//Задание 2. Разработайте необходимые методы для того, чтобы код,
	// приведенный ниже выполнялся корректно

	//Задание 2.1. создайте 2 копии  базы  bd1
	BD bd2 = bd1; 
	std::cout << bd2; //выводим информацию обо всех сотрудниках  из базы bd2
	BD bd3 = bd1;
	std::cout << bd3; //выводим информацию обо всех сотрудниках  из базы bd3

	//Задание 2.2.  
	//добавьте сотрудников в базу  bd2
	std::cout << bd2; //выводим информацию обо всех сотрудниках  из базы bd2
	bd1=bd2;   //  из "большой" в "маленькую"
	std::cout << bd2; //выводим информацию обо всех сотрудниках  из базы bd1

	//Задание 2.3.
	bd1=bd3;   //  из "маленькой"  в "большую" 
	std::cout << bd1; //выводим информацию обо всех сотрудниках  из базы bd1
	

	//Задание 3. вспоминаем про семантику перемещения
	Задание 3.1. создайте копию  базы  bd1
	Base bd4 = move(bd2); 
	std::cout << bd4; //выводим информацию обо всех сотрудниках  из базы bd4
	std::cout << bd2; //выводим информацию обо всех сотрудниках  из базы bd2

	Задание 3.2. 

	bd3 = move(bd4);
	std::cout << bd3; //выводим информацию обо всех сотрудниках  из базы bd3
	std::cout << bd4; //выводим информацию обо всех сотрудниках  из базы bd4

	//Задание 4.  Сортировка

	//Задание 4.1. Разработайте сортировку базы данных  по возрастанию ключа
	//подумайте, что надо перегрузить в классе MyString
	
	//Задание 4.2.Отсортируйте любую базу данных и выведите результат


		std::cout << bd << endl;
	bd.sort();
	cout << bd << endl;
*/
	
	return 0;
}//endmain

